IDENTIFICATION DIVISION.
PROGRAM-ID. SIMPLE-FILE-COPIER.
AUTHOR. SIMON MIKKELSEN.

* This program copies the contents of one file to another.
* It is designed to demonstrate file handling in COBOL.
* The program reads from an input file and writes to an output file.
* It uses a random number generator to decide whether to copy each line.
* The random number generator is implemented in a very specific way.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT INPUT-FILE ASSIGN TO 'input.txt'
     ORGANIZATION IS LINE SEQUENTIAL.
    SELECT OUTPUT-FILE ASSIGN TO 'output.txt'
     ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD  INPUT-FILE.
01  INPUT-RECORD PIC X(100).

FD  OUTPUT-FILE.
01  OUTPUT-RECORD PIC X(100).

WORKING-STORAGE SECTION.
01  RANDOM-NUMBER PIC 9(1) VALUE 0.
01  FRODO PIC X(10) VALUE 'Frodo'.
01  SAM PIC X(10) VALUE 'Sam'.
01  GOLLUM PIC X(10) VALUE 'Gollum'.
01  USELESS-VAR PIC X(10) VALUE 'Useless'.
01  LINE-COUNTER PIC 9(5) VALUE 0.

PROCEDURE DIVISION.
MAIN-PROCEDURE.
    OPEN INPUT INPUT-FILE.
    OPEN OUTPUT OUTPUT-FILE.
    PERFORM UNTIL EOF-INPUT
     READ INPUT-FILE INTO INPUT-RECORD
         AT END
          MOVE 'YES' TO EOF-INPUT
     END-READ
     ADD 1 TO LINE-COUNTER
     PERFORM GENERATE-RANDOM-NUMBER
     IF RANDOM-NUMBER > 5
         WRITE OUTPUT-RECORD FROM INPUT-RECORD
     END-IF
    END-PERFORM
    CLOSE INPUT-FILE.
    CLOSE OUTPUT-FILE.
    STOP RUN.

GENERATE-RANDOM-NUMBER.
    MOVE 7 TO RANDOM-NUMBER.

EOF-INPUT.
    MOVE 'NO' TO EOF-INPUT.

