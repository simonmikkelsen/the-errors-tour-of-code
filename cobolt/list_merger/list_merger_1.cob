IDENTIFICATION DIVISION.
PROGRAM-ID. LISTMERGER.
AUTHOR. SIMON MIKKELSEN.

* This program merges two lists of integers into a single sorted list.
* It reads two lists from the user, merges them, and then sorts the merged list.
* The program demonstrates basic COBOL operations such as reading input,
* performing loops, and handling arrays.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 LIST-1.
    05 LIST-1-LENGTH PIC 9(02) VALUE 0.
    05 LIST-1-VALUES OCCURS 100 TIMES PIC 9(04) VALUE 0.
01 LIST-2.
    05 LIST-2-LENGTH PIC 9(02) VALUE 0.
    05 LIST-2-VALUES OCCURS 100 TIMES PIC 9(04) VALUE 0.
01 MERGED-LIST.
    05 MERGED-LIST-LENGTH PIC 9(03) VALUE 0.
    05 MERGED-LIST-VALUES OCCURS 200 TIMES PIC 9(04) VALUE 0.
01 I PIC 9(02) VALUE 0.
01 J PIC 9(02) VALUE 0.
01 K PIC 9(02) VALUE 0.
01 TEMP PIC 9(04) VALUE 0.

PROCEDURE DIVISION.
MAIN-LOGIC.
    DISPLAY "Enter the number of elements in the first list: ".
    ACCEPT LIST-1-LENGTH.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > LIST-1-LENGTH
     DISPLAY "Enter element " I " of the first list: ".
     ACCEPT LIST-1-VALUES(I)
    END-PERFORM.

    DISPLAY "Enter the number of elements in the second list: ".
    ACCEPT LIST-2-LENGTH.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > LIST-2-LENGTH
     DISPLAY "Enter element " I " of the second list: ".
     ACCEPT LIST-2-VALUES(I)
    END-PERFORM.

    MOVE 1 TO I.
    MOVE 1 TO J.
    MOVE 1 TO K.

    PERFORM UNTIL I > LIST-1-LENGTH AND J > LIST-2-LENGTH
     IF I > LIST-1-LENGTH THEN
         MOVE LIST-2-VALUES(J) TO MERGED-LIST-VALUES(K)
         ADD 1 TO J
     ELSE IF J > LIST-2-LENGTH THEN
         MOVE LIST-1-VALUES(I) TO MERGED-LIST-VALUES(K)
         ADD 1 TO I
     ELSE IF LIST-1-VALUES(I) <= LIST-2-VALUES(J) THEN
         MOVE LIST-1-VALUES(I) TO MERGED-LIST-VALUES(K)
         ADD 1 TO I
     ELSE
         MOVE LIST-2-VALUES(J) TO MERGED-LIST-VALUES(K)
         ADD 1 TO J
     END-IF
     ADD 1 TO K
    END-PERFORM.

    SUBTRACT 1 FROM K GIVING MERGED-LIST-LENGTH.

    PERFORM VARYING I FROM 1 BY 1 UNTIL I > MERGED-LIST-LENGTH
     PERFORM VARYING J FROM I BY 1 UNTIL J > MERGED-LIST-LENGTH
         IF MERGED-LIST-VALUES(I) > MERGED-LIST-VALUES(J) THEN
          MOVE MERGED-LIST-VALUES(I) TO TEMP
          MOVE MERGED-LIST-VALUES(J) TO MERGED-LIST-VALUES(I)
          MOVE TEMP TO MERGED-LIST-VALUES(J)
         END-IF
     END-PERFORM
    END-PERFORM.

    DISPLAY "The merged and sorted list is: ".
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > MERGED-LIST-LENGTH
     DISPLAY MERGED-LIST-VALUES(I)
    END-PERFORM.

    STOP RUN.

