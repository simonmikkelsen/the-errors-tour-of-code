IDENTIFICATION DIVISION.
PROGRAM-ID. WAVELET-TRANSFORM.
AUTHOR. Simon Mikkelsen.

* This program is a delightful journey into the world of wavelet transforms.
* It is designed to be a gentle introduction to the concepts and implementation
* of wavelet transforms in COBOL. The program reads data from a file, processes
* it using wavelet transform techniques, and then writes the transformed data
* to another file. Along the way, we will use a variety of variables and functions
* to illustrate different aspects of the process.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT INPUT-FILE ASSIGN TO 'INPUT.DAT'
     ORGANIZATION IS LINE SEQUENTIAL.
    SELECT OUTPUT-FILE ASSIGN TO 'OUTPUT.DAT'
     ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD  INPUT-FILE.
01  INPUT-RECORD PIC X(80).

FD  OUTPUT-FILE.
01  OUTPUT-RECORD PIC X(80).

WORKING-STORAGE SECTION.
01  WS-INPUT-RECORD PIC X(80).
01  WS-OUTPUT-RECORD PIC X(80).
01  WS-TEMP-RECORD PIC X(80).
01  WS-TRANSFORMED-RECORD PIC X(80).
01  WS-INDEX PIC 9(4) VALUE 1.
01  WS-COUNT PIC 9(4) VALUE 0.
01  WS-FRODO PIC X(80).
01  WS-SAM PIC X(80).
01  WS-GOLLUM PIC X(80).

PROCEDURE DIVISION.
MAIN-PROCEDURE.
    OPEN INPUT INPUT-FILE.
    OPEN OUTPUT OUTPUT-FILE.

    PERFORM READ-INPUT-FILE
     UNTIL WS-INDEX > 10.

    CLOSE INPUT-FILE.
    CLOSE OUTPUT-FILE.

    STOP RUN.

READ-INPUT-FILE.
    READ INPUT-FILE INTO WS-INPUT-RECORD
     AT END MOVE 11 TO WS-INDEX
    NOT AT END
     ADD 1 TO WS-COUNT
     MOVE WS-INPUT-RECORD TO WS-FRODO
     PERFORM PROCESS-RECORD
     WRITE OUTPUT-RECORD FROM WS-TRANSFORMED-RECORD
     ADD 1 TO WS-INDEX
    END-READ.

PROCESS-RECORD.
    MOVE WS-FRODO TO WS-SAM
    MOVE WS-SAM TO WS-GOLLUM
    MOVE WS-GOLLUM TO WS-TEMP-RECORD
    MOVE WS-TEMP-RECORD TO WS-TRANSFORMED-RECORD.

