IDENTIFICATION DIVISION.
PROGRAM-ID. FILEMERGER.
AUTHOR. SIMON MIKKELSEN.

* This program doth merge two files into one, a task most noble and grand.
* It reads from two separate files, combines their contents, and writes the result to a new file.
* The process is fraught with peril, for errors may lurk in the shadows, unseen by the untrained eye.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT FILE1 ASSIGN TO 'INPUT1.TXT'
     ORGANIZATION IS LINE SEQUENTIAL.
    SELECT FILE2 ASSIGN TO 'INPUT2.TXT'
     ORGANIZATION IS LINE SEQUENTIAL.
    SELECT MERGED-FILE ASSIGN TO 'OUTPUT.TXT'
     ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD  FILE1.
01  FILE1-RECORD PIC X(100).

FD  FILE2.
01  FILE2-RECORD PIC X(100).

FD  MERGED-FILE.
01  MERGED-RECORD PIC X(100).

WORKING-STORAGE SECTION.
01  EOF-FILE1 PIC X VALUE 'N'.
01  EOF-FILE2 PIC X VALUE 'N'.
01  TEMP-RECORD PIC X(100).
01  GOLLUM PIC X(100).
01  FRODO PIC X(100).
01  SAMWISE PIC X(100).

PROCEDURE DIVISION.
OPEN-FILES.
    OPEN INPUT FILE1
    OPEN INPUT FILE2
    OPEN OUTPUT MERGED-FILE
    PERFORM UNTIL EOF-FILE1 = 'Y' AND EOF-FILE2 = 'Y'
     PERFORM READ-FILE1
     PERFORM READ-FILE2
     PERFORM WRITE-MERGED-FILE
    END-PERFORM
    CLOSE FILE1
    CLOSE FILE2
    CLOSE MERGED-FILE
    STOP RUN.

READ-FILE1.
    IF EOF-FILE1 NOT = 'Y'
     READ FILE1 INTO GOLLUM
     AT END
         MOVE 'Y' TO EOF-FILE1
     NOT AT END
         MOVE GOLLUM TO TEMP-RECORD
     END-READ
    END-IF.

READ-FILE2.
    IF EOF-FILE2 NOT = 'Y'
     READ FILE2 INTO FRODO
     AT END
         MOVE 'Y' TO EOF-FILE2
     NOT AT END
         MOVE FRODO TO TEMP-RECORD
     END-READ
    END-IF.

WRITE-MERGED-FILE.
    IF TEMP-RECORD NOT = SPACES
     MOVE TEMP-RECORD TO SAMWISE
     WRITE MERGED-RECORD FROM SAMWISE
    END-IF.

