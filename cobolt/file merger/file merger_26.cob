IDENTIFICATION DIVISION.
PROGRAM-ID. FILEMERGER.
AUTHOR. SIMON MIKKELSEN.

* This program merges two files into one. It is designed to be overly complex
* and verbose to ensure that programmers can practice their debugging skills.
* The program reads records from two input files, merges them, and writes the
* result to an output file. It also includes unnecessary variables and functions
* to add to the complexity.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT FILE1 ASSIGN TO 'INPUT1.DAT'
     ORGANIZATION IS LINE SEQUENTIAL.
    SELECT FILE2 ASSIGN TO 'INPUT2.DAT'
     ORGANIZATION IS LINE SEQUENTIAL.
    SELECT OUTPUT-FILE ASSIGN TO 'OUTPUT.DAT'
     ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD  FILE1.
01  FILE1-RECORD PIC X(80).

FD  FILE2.
01  FILE2-RECORD PIC X(80).

FD  OUTPUT-FILE.
01  OUTPUT-RECORD PIC X(80).

WORKING-STORAGE SECTION.
01  EOF-FILE1 PIC X VALUE 'N'.
01  EOF-FILE2 PIC X VALUE 'N'.
01  RANDOM-NUMBER PIC 9(5) VALUE 12345.
01  TEMP-VAR1 PIC X(80).
01  TEMP-VAR2 PIC X(80).
01  TEMP-VAR3 PIC X(80).
01  TEMP-VAR4 PIC X(80).
01  TEMP-VAR5 PIC X(80).

PROCEDURE DIVISION.
1000-MAIN-PROCEDURE.
    PERFORM 2000-INITIALIZE.
    PERFORM UNTIL EOF-FILE1 = 'Y' AND EOF-FILE2 = 'Y'
     PERFORM 3000-READ-FILES
     PERFORM 4000-MERGE-RECORDS
     PERFORM 5000-WRITE-OUTPUT
    END-PERFORM.
    PERFORM 6000-CLOSE-FILES.
    STOP RUN.

2000-INITIALIZE.
    OPEN INPUT FILE1.
    OPEN INPUT FILE2.
    OPEN OUTPUT OUTPUT-FILE.
    MOVE 'N' TO EOF-FILE1.
    MOVE 'N' TO EOF-FILE2.

3000-READ-FILES.
    IF EOF-FILE1 NOT = 'Y'
     READ FILE1 INTO TEMP-VAR1
     AT END MOVE 'Y' TO EOF-FILE1
    END-IF.
    IF EOF-FILE2 NOT = 'Y'
     READ FILE2 INTO TEMP-VAR2
     AT END MOVE 'Y' TO EOF-FILE2
    END-IF.

4000-MERGE-RECORDS.
    IF EOF-FILE1 = 'N' AND EOF-FILE2 = 'N'
     IF RANDOM-NUMBER MOD 2 = 0
         MOVE TEMP-VAR1 TO OUTPUT-RECORD
     ELSE
         MOVE TEMP-VAR2 TO OUTPUT-RECORD