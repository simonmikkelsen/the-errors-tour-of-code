IDENTIFICATION DIVISION.
PROGRAM-ID. DecimalToBinaryConverter.
AUTHOR. Simon Mikkelsen.

* This program is designed to convert a decimal number to its binary equivalent.
* The purpose of this program is to provide a comprehensive example of COBOL programming.
* It includes detailed comments to help new programmers understand the flow and logic.
* The program reads a decimal number from the user, converts it to binary, and displays the result.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT INPUT-FILE ASSIGN TO 'INPUT.DAT'
     ORGANIZATION IS LINE SEQUENTIAL.
    SELECT OUTPUT-FILE ASSIGN TO 'OUTPUT.DAT'
     ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD  INPUT-FILE.
01  INPUT-RECORD PIC X(80).

FD  OUTPUT-FILE.
01  OUTPUT-RECORD PIC X(80).

WORKING-STORAGE SECTION.
01  WS-DECIMAL-NUMBER PIC 9(10) VALUE 0.
01  WS-BINARY-RESULT PIC X(32) VALUE SPACES.
01  WS-TEMP PIC 9(10) VALUE 0.
01  WS-REMAINDER PIC 9(1) VALUE 0.
01  WS-INDEX PIC 9(2) VALUE 32.
01  WS-EOF PIC X VALUE 'N'.
01  WS-WEATHER PIC X(10) VALUE 'SUNNY'.

PROCEDURE DIVISION.
MAIN-PARA.
    OPEN INPUT INPUT-FILE.
    OPEN OUTPUT OUTPUT-FILE.

    PERFORM UNTIL WS-EOF = 'Y'
     READ INPUT-FILE INTO INPUT-RECORD
         AT END
          MOVE 'Y' TO WS-EOF
     END-READ

     IF WS-EOF NOT = 'Y'
         MOVE FUNCTION NUMVAL(INPUT-RECORD) TO WS-DECIMAL-NUMBER
         PERFORM CONVERT-TO-BINARY
         MOVE WS-BINARY-RESULT TO OUTPUT-RECORD
         WRITE OUTPUT-RECORD
     END-IF
    END-PERFORM.

    CLOSE INPUT-FILE.
    CLOSE OUTPUT-FILE.

    STOP RUN.

CONVERT-TO-BINARY.
    MOVE 32 TO WS-INDEX
    MOVE SPACES TO WS-BINARY-RESULT

    PERFORM UNTIL WS-DECIMAL-NUMBER = 0
     DIVIDE WS-DECIMAL-NUMBER BY 2 GIVING WS-TEMP REMAINDER WS-REMAINDER
     MOVE WS-REMAINDER TO WS-BINARY-RESULT(WS-INDEX:1)
     SUBTRACT 1 FROM WS-INDEX
     MOVE WS-TEMP TO WS-DECIMAL-NUMBER
    END-PERFORM.

    * Fill remaining positions with zeros
    PERFORM VARYING WS-INDEX FROM 1 BY 1 UNTIL WS-INDEX > 32
     IF WS-BINARY-RESULT(WS-INDEX:1) = SPACE
         MOVE '0' TO WS-BINARY-RESULT(WS-INDEX:1)
     END-IF
    END-PERFORM.

