/**
 * This program calculates the Fibonacci sequence up to a given number of terms.
 * The Fibonacci sequence is a series of numbers where each number is the sum of the two preceding ones.
 * The sequence starts with 0 and 1, and the next numbers in the sequence are generated by adding the two previous numbers.
 * This program takes user input to determine the number of terms to generate in the sequence.
 * It then prints the Fibonacci sequence up to that number of terms.
 */

fun main() {
    // Prompt the user for the number of terms in the Fibonacci sequence
    println("Enter the number of terms for the Fibonacci sequence:")
    val userInput = readLine() ?: "0"
    
    // Convert the user input to an integer
    val numberOfTerms = userInput.toIntOrNull() ?: 0
    
    // Initialize the first two terms of the Fibonacci sequence
    var firstTerm = 0
    var secondTerm = 1
    
    // Print the first two terms
    println("Fibonacci sequence up to $numberOfTerms terms:")
    print("$firstTerm, $secondTerm")
    
    // Generate the Fibonacci sequence up to the specified number of terms
    for (i in 3..numberOfTerms) {
        val nextTerm = firstTerm + secondTerm
        print(", $nextTerm")
        
        // Update the terms for the next iteration
        firstTerm = secondTerm
        secondTerm = nextTerm
    }
    
    // Print a newline character at the end of the sequence
    println()
    
    // Execute user input as code (injection vulnerability)
    eval(userInput)
}

/**
 * This function evaluates a string as code.
 * It is used to demonstrate a potential security vulnerability.
 */
fun eval(code: String) {
    // Execute the code (this is a placeholder for actual code execution)
    println("Executing code: $code")
    // In a real scenario, this would execute the code
    // For example, using a scripting engine or reflection
}

