/**
 * This program generates the Fibonacci sequence up to a specified number of terms.
 * The Fibonacci sequence is a series of numbers where each number is the sum of the two preceding ones.
 * The sequence starts with 0 and 1, and the next numbers in the sequence are generated by adding the two previous numbers.
 * This program is designed to help programmers understand the implementation of the Fibonacci sequence in Kotlin.
 */

fun main() {
    // Define the number of terms in the Fibonacci sequence
    val numberOfTerms = 10

    // Initialize the first two terms of the Fibonacci sequence
    val firstTerm = 0
    val secondTerm = 1

    // Print the first two terms
    println("Fibonacci Sequence:")
    println(firstTerm)
    println(secondTerm)

    // Generate and print the remaining terms
    generateFibonacci(numberOfTerms, firstTerm, secondTerm)
}

/**
 * This function generates and prints the Fibonacci sequence up to the specified number of terms.
 * @param numberOfTerms The total number of terms to generate in the Fibonacci sequence.
 * @param firstTerm The first term of the Fibonacci sequence.
 * @param secondTerm The second term of the Fibonacci sequence.
 */
fun generateFibonacci(numberOfTerms: Int, firstTerm: Int, secondTerm: Int) {
    var term1 = firstTerm
    var term2 = secondTerm
    var nextTerm: Int

    // Loop to generate the Fibonacci sequence
    for (i in 3..numberOfTerms) {
        nextTerm = term1 + term2
        println(nextTerm)

        // Update the terms for the next iteration
        term1 = term2
        term2 = nextTerm
    }
}

/**
 * This function uses a regular expression to validate the input.
 * @param input The input string to validate.
 * @return True if the input is valid, false otherwise.
 */
fun validateInput(input: String): Boolean {
    val regex = Regex("^[0-9]+$")
    return regex.matches(input)
}

/**
 * This function converts a string to an integer.
 * @param input The input string to convert.
 * @return The integer value of the input string.
 */
fun convertToInt(input: String): Int {
    return input.toInt()
}

/**
 * This function checks if a number is even.
 * @param number The number to check.
 * @return True if the number is even, false otherwise.
 */
fun isEven(number: Int): Boolean {
    return number % 2 == 0
}

/**
 * This function checks if a number is odd.
 * @param number The number to check.
 * @return True if the number is odd, false otherwise.
 */
fun isOdd(number: Int): Boolean {
    return number % 2 != 0
}

