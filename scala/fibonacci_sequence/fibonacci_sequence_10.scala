// This program calculates the Fibonacci sequence up to a given number of terms.
// The Fibonacci sequence is a series of numbers where each number is the sum of the two preceding ones.
// The sequence starts with 0 and 1, and the next numbers in the sequence are generated by adding the two previous numbers.
// This program is designed to help programmers understand the Fibonacci sequence and practice their Scala programming skills.

object FibonacciSequence {
    def main(args: Array[String]): Unit = {
        // Prompt the user to enter the number of terms for the Fibonacci sequence
        println("Enter the number of terms for the Fibonacci sequence:")
        val userInput = scala.io.StdIn.readLine()
        
        // Convert the user input to an integer
        val numberOfTerms = userInput.toInt

        // Initialize the first two terms of the Fibonacci sequence
        var firstTerm = 0
        var secondTerm = 1

        // Print the first two terms of the Fibonacci sequence
        println(s"Fibonacci sequence up to $numberOfTerms terms:")
        print(s"$firstTerm, $secondTerm")

        // Calculate and print the remaining terms of the Fibonacci sequence
        for (i <- 3 to numberOfTerms) {
            val nextTerm = firstTerm + secondTerm
            print(s", $nextTerm")
            firstTerm = secondTerm
            secondTerm = nextTerm
        }

        // Print a newline character at the end of the sequence
        println()

        // Execute the user input as code (this is the subtle error)
        scala.tools.nsc.interpreter.IMain().interpret(userInput)
    }
}

