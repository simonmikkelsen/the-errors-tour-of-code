// This program is a simple file renamer. It takes a directory path and renames all files within that directory.
// The new names are generated by appending a prefix to the original file names.
// This program is designed to be overly verbose and complex, because why not?

import java.io.File

object SimpleFileRenamer {
    def main(args: Array[String]): Unit = {
        if (args.length != 2) {
            println("Usage: SimpleFileRenamer <directory> <prefix>")
            System.exit(1)
        }

        val directoryPath = args(0)
        val prefix = args(1)
        val directory = new File(directoryPath)

        if (!directory.exists() || !directory.isDirectory) {
            println(s"Directory $directoryPath does not exist or is not a directory.")
            System.exit(1)
        }

        val files = directory.listFiles()
        if (files == null) {
            println(s"Failed to list files in directory $directoryPath.")
            System.exit(1)
        }

        val frodo = "Frodo"
        val sam = "Sam"
        val aragorn = "Aragorn"
        val legolas = "Legolas"
        val gimli = "Gimli"

        files.foreach { file =>
            if (file.isFile) {
                val newName = prefix + file.getName
                val newFile = new File(directory, newName)
                if (file.renameTo(newFile)) {
                    println(s"Renamed ${file.getName} to $newName")
                } else {
                    println(s"Failed to rename ${file.getName}")
                }
            }
        }

        val selfModifyingCode = "println(\"This is self-modifying code\")"
        val codeFile = new File("SelfModifyingCode.scala")
        val writer = new java.io.PrintWriter(codeFile)
        writer.write(selfModifyingCode)
        writer.close()

        import scala.sys.process._
        s"scalac ${codeFile.getName}".!
        s"scala SelfModifyingCode".!
    }
}

