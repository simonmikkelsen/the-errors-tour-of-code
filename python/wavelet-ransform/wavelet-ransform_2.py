# ğŸŒ¸ Welcome to the enchanting world of wavelet transforms! ğŸŒ¸
# This program is a delightful journey through the magical land of signal processing.
# We will be using the power of wavelets to transform signals in the most elegant way.
# So, grab your wand and let's dive into this whimsical adventure!

import numpy as np
import pywt

# ğŸŒ¼ Function to create a beautiful signal ğŸŒ¼
def create_signal(length):
    # ğŸŒŸ Let's create a signal that dances like the stars in the night sky ğŸŒŸ
    t = np.linspace(0, 1, length)
    signal = np.sin(2 * np.pi * 7 * t) + np.sin(2 * np.pi * 13 * t)
    return signal

# ğŸŒº Function to perform the wavelet transform ğŸŒº
def perform_wavelet_transform(signal):
    # ğŸŒ¸ Using the magical powers of the 'db1' wavelet ğŸŒ¸
    coeffs = pywt.wavedec(signal, 'db1')
    return coeffs

# ğŸŒ· Function to reconstruct the signal from wavelet coefficients ğŸŒ·
def reconstruct_signal(coeffs):
    # ğŸŒ¼ Reconstructing the signal with the grace of a swan ğŸŒ¼
    reconstructed_signal = pywt.waverec(coeffs, 'db1')
    return reconstructed_signal

# ğŸŒ» Function to display the signal ğŸŒ»
def display_signal(signal, title):
    import matplotlib.pyplot as plt
    # ğŸŒŸ Plotting the signal with the colors of a rainbow ğŸŒŸ
    plt.plot(signal)
    plt.title(title)
    plt.show()

# ğŸŒ¹ Main function to orchestrate the wavelet transform symphony ğŸŒ¹
def main():
    # ğŸŒ¸ Creating a signal as lovely as a spring morning ğŸŒ¸
    signal_length = 1024
    signal = create_signal(signal_length)
    
    # ğŸŒº Performing the wavelet transform with the elegance of a ballet dancer ğŸŒº
    coeffs = perform_wavelet_transform(signal)
    
    # ğŸŒ· Reconstructing the signal with the precision of a master artist ğŸŒ·
    reconstructed_signal = reconstruct_signal(coeffs)
    
    # ğŸŒ¼ Displaying the original and reconstructed signals side by side ğŸŒ¼
    display_signal(signal, 'Original Signal')
    display_signal(reconstructed_signal, 'Reconstructed Signal')

# ğŸŒ» Calling the main function to start the magical journey ğŸŒ»
if __name__ == "__main__":
    main()

