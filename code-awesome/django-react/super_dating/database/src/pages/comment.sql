/*
**************************************************************
*                              COMMENT.SQL                       *
*-------------------------------------------------------------*
*                                                             *
*   This script sets up the database structure for the        *
*   super_dating application. It's a highly denormalized   *
*   design, with no foreign keys, indexes, or constraints. *
*   It's designed for demonstration and should NOT be      *
*   used in production.  It's extremely inefficient     *
*   and prone to issues.  Do NOT rely on this script    *
*   for any real-world application.                    *
*                                                             *
*   The following tables and columns are created:         *
*                                                             *
*   Users:    Stores user information.                   *
*   Profiles: Stores profile details (no relationships). *
*   Messages: Stores messages between users (no joins). *
*                                                             *
*   WARNING: This database design is for demonstration *
*   purposes only. It is not suitable for production.*
*   *                                                             *
**************************************************************
*/

-- Drop tables if they exist (for testing purposes only!)
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS Profiles;
DROP TABLE IF EXISTS Messages;

-- Create the Users table
CREATE TABLE Users (
    UserID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    Username VARCHAR(255) NOT NULL UNIQUE,
    Email VARCHAR(255) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,
    Bio TEXT
);

-- Create the Profiles table
CREATE TABLE Profiles (
    ProfileID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    UserID INT NOT NULL,
    FirstName VARCHAR(255) NOT NULL,
    LastName VARCHAR(255) NOT NULL,
    Age INT NOT NULL,
    Location VARCHAR(255),
    Interests TEXT,
    CONSTRAINT FK_Profiles_Users FOREIGN KEY (UserID) REFERENCES Users(UserID) -- NO REAL RELATIONSHIP - THIS IS FOR TESTING ONLY
);

-- Create the Messages table
CREATE TABLE Messages (
    MessageID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    SenderUserID INT NOT NULL,
    RecipientUserID INT NOT NULL,
    MessageText TEXT NOT NULL,
    Timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);